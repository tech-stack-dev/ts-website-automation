name: Playwright UI E2E

on:
  workflow_dispatch:
  schedule:
    # Run each day at 21:10
    - cron: "10 21 * * *"
  pull_request:
    paths:
      - "ui_tests_playwright/**"

# To cancel previous run within one PR after pushing new commit (if previous still in progress)
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:        
  tests_e2e:
    name: Playwright end-to-end tests
    runs-on: ubuntu-latest
    # Set up queue for parallel actions
    concurrency:
      group: ${{ github.event_name }}

    env:
      AWS_KEY: ${{ secrets.AWS_KEY }}
      AWS_PASSWORD: ${{ secrets.AWS_PASSWORD }}
      JIRA_AUTH_TOKEN: ${{ secrets.JIRA_AUTH_TOKEN }}
      CI: true
    defaults:
      run:
        working-directory: ./ui_tests_playwright
    steps:
      - uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm ci

      - name: Install TypeScript and ts-node
        run: npm install -g typescript ts-node

      - name: Set current time as an environment variable
        run: | 
          echo "CURRENT_DAY=$(date '+%Y-%m-%d')" >> $GITHUB_ENV
          echo "CURRENT_TIME=$(date '%H-%M-%S')" >> $GITHUB_ENV

      - name: Run Search and Collect Ticket Statuses
        id: ticket-statuses
        run: |
          npx ts-node automation/scripts/GetListOfJirasToSkip.ts
          ticketStatusesFile="ticketStatuses.json"
          if [[ -f "$ticketStatusesFile" ]]; then
            ticketStatuses=$(cat "$ticketStatusesFile" | jq -r 'join("|")')
          else
            ticketStatuses=""
          fi
          echo "ticketStatuses=$ticketStatuses" >> $GITHUB_OUTPUT

      - name: Install playwright browsers
        run: npx playwright install --with-deps

      - name: Run Unit Tests
        run: npm run unit-tests

      - name: Run UI tests
        shell: bash
        run: QASE_REPORT="1" npx playwright test --grep "@Regression @UxUiDesign @TSWEB-670"

      - uses: actions/upload-artifact@v3
        name: Upload Playwright report
        if: always()
        with:
          name: playwright-report
          path: ui_tests_playwright/playwright-report/
          retention-days: 30

      - name: Switch to gh-pages branch and create folder
        run: |
          git checkout gh-pages
          timestamp=$(date "+%Y%m%d%H%M%S")
          report_folder="automation/reports/"
          if [ "${{ github.event_name }}" == "schedule" ]; then
            report_folder="${report_folder}regression"
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            report_folder="${report_folder}pull-requests"
          fi

          new_report_folder="${report_folder}/${{ env.CURRENT_DAY }}/${ env.CURRENT_TIME }"
          mkdir -p $new_report_folder
          echo "Created folder: $new_report_folder"
          echo "REPORT_FOLDER=$new_report_folder" >> $GITHUB_ENV

      - name: Download Playwright report artifact
        if: always()
        uses: actions/download-artifact@v2
        with:
          name: playwright-report
          path: ${ env.REPORT_FOLDER }

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ui_tests_playwright/
          publish_branch: gh-pages

      - name: Preparing Slack emoji
        uses: haya14busa/action-cond@v1
        if: ${{ (!github.event.pull_request.draft && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure()))) }}
        id: slack_icon_emoji
        with:
          cond: ${{ job.status == 'failure' }}
          if_true: ":finnadie:"
          if_false: ":aw_yeah:"

      - name: Set Slack Channel production
        uses: haya14busa/action-cond@v1
        if: ${{ (!github.event.pull_request.draft && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure()))) }}
        id: slack_channel_production
        with:
          cond: ${{ github.event_name == 'pull_request' && job.status == 'failure' }}
          if_true: ts_website_automation
          if_false: ts_website

      - name: Set Slack Channel automation
        uses: haya14busa/action-cond@v1
        if: ${{ (!github.event.pull_request.draft && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure()))) }}
        id: slack_channel_automation
        with:
          cond: ${{ github.event_name == 'pull_request' && job.status == 'failure' }}
          if_true: test_slack_notifications
          if_false: ts_website_automation

      - name: Parse Test Results
        if: always()
        id: tests-count
        run: npx ts-node automation/scripts/GetAutotestsCount.ts
          
