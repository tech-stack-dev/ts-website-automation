name: Playwright UI E2E Mobile

on:
  workflow_run:
    workflows: [Playwright UI E2E]
    types:
      - completed


jobs:
  tests_e2e:
    name: Playwright end-to-end mobile tests
    runs-on: ubuntu-latest
    # Set up queue for parallel actions
    concurrency:
      group: ${{ github.event_name }}

    env:
      AWS_KEY: ${{ secrets.AWS_KEY }}
      AWS_PASSWORD: ${{ secrets.AWS_PASSWORD }}
      JIRA_AUTH_TOKEN: ${{ secrets.JIRA_AUTH_TOKEN }}
      CI: true
    defaults:
      run:
        working-directory: ./ui_tests_playwright
    steps: 
      - *steps
      # Override part of code from playwright.yml for mobile tests
      - name: Run UI tests
        shell: bash
        run: QASE_REPORT="1" npx playwright test --project=Mobile\ Safari --grep "@mobile" --grep-invert "${{ steps.ticket-statuses.outputs.ticketStatuses }}" | tee test-output.txt

      - name: Slack Notification for UI tests production
        if: ${{ (!github.event.pull_request.draft && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure()))) }}
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: Tests execution report
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ steps.slack_channel_production.outputs.value }}
          SLACK_ICON_EMOJI: ${{ steps.slack_icon_emoji.outputs.value }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Total: ${{ env.TOTAL }} | ‚úÖPassed: ${{ env.PASSED }} | ‚ùåFailed: ${{ env.FAILED }} | ‚è≠Ô∏èSkipped: ${{ env.SKIPPED }} | üîÅFlaky: ${{ env.FLAKY }} \n:eyes: link for report: https://tech-stack-dev.github.io/ts-website-automation/ui_tests_playwright/automation/reports/regression/${{ env.CURRENT_DAY }}/${{ env.CURRENT_TIME }}/index.html"
          SLACK_TITLE: TypeScript UI mobile tests
          MSG_MINIMAL: true
          SLACK_FOOTER: TS website

      - name: Slack Notification for UI tests automation
        if: ${{ (!github.event.pull_request.draft && ((github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') || (github.event_name == 'pull_request' && failure()))) }}
        uses: rtCamp/action-slack-notify@v2.2.0
        env:
          SLACK_USERNAME: Tests execution report
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ${{ steps.slack_channel_automation.outputs.value }}
          SLACK_ICON_EMOJI: ${{ steps.slack_icon_emoji.outputs.value }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: "Total: ${{ env.TOTAL }} | ‚úÖPassed: ${{ env.PASSED }} | ‚ùåFailed: ${{ env.FAILED }} | ‚è≠Ô∏èSkipped: ${{ env.SKIPPED }} | üîÅFlaky: ${{ env.FLAKY }} \n:eyes: link for report: https://tech-stack-dev.github.io/ts-website-automation/ui_tests_playwright/automation/reports/regression/${{ env.CURRENT_DAY }}/${{ env.CURRENT_TIME }}/index.html"
          SLACK_TITLE: TypeScript UI mobile tests
          MSG_MINIMAL: true
          SLACK_FOOTER: TS website
