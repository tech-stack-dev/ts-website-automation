/**
 * Qase.io API
 * Qase API Specification.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@qase.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
import { RequestArgs, BaseAPI } from '../base';
import { AttachmentListResponse } from '../model';
import { AttachmentResponse } from '../model';
import { AttachmentUploadsResponse } from '../model';
import { HashResponse } from '../model';
/**
 * AttachmentsApi - axios parameter creator
 * @export
 */
export declare const AttachmentsApiAxiosParamCreator: (configuration?: Configuration | undefined) => {
    /**
     * This method allows to remove attachment by Hash.
     * @summary Remove attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAttachment: (hash: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to retrieve attachment by Hash.
     * @summary Get attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAttachment: (hash: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to retrieve attachments.
     * @summary Get all attachments.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAttachments: (limit?: number | undefined, offset?: number | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * This method allows to upload attachment to Qase. Max upload size: * Up to 32 Mb per file * Up to 128 Mb per single request * Up to 20 files per single request  If there is no free space left in your team account, you will receive an error with code 507 - Insufficient Storage.
     * @summary Upload attachment.
     * @param {string} code Code of project, where to search entities.
     * @param {Array<any>} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadAttachment: (code: string, file?: any[] | undefined, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AttachmentsApi - functional programming interface
 * @export
 */
export declare const AttachmentsApiFp: (configuration?: Configuration | undefined) => {
    /**
     * This method allows to remove attachment by Hash.
     * @summary Remove attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAttachment(hash: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<HashResponse>>;
    /**
     * This method allows to retrieve attachment by Hash.
     * @summary Get attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAttachment(hash: string, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<AttachmentResponse>>;
    /**
     * This method allows to retrieve attachments.
     * @summary Get all attachments.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAttachments(limit?: number | undefined, offset?: number | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<AttachmentListResponse>>;
    /**
     * This method allows to upload attachment to Qase. Max upload size: * Up to 32 Mb per file * Up to 128 Mb per single request * Up to 20 files per single request  If there is no free space left in your team account, you will receive an error with code 507 - Insufficient Storage.
     * @summary Upload attachment.
     * @param {string} code Code of project, where to search entities.
     * @param {Array<any>} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadAttachment(code: string, file?: any[] | undefined, options?: AxiosRequestConfig<any> | undefined): Promise<(axios?: AxiosInstance | undefined, basePath?: string | undefined) => AxiosPromise<AttachmentUploadsResponse>>;
};
/**
 * AttachmentsApi - factory interface
 * @export
 */
export declare const AttachmentsApiFactory: (configuration?: Configuration | undefined, basePath?: string | undefined, axios?: AxiosInstance | undefined) => {
    /**
     * This method allows to remove attachment by Hash.
     * @summary Remove attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAttachment(hash: string, options?: any): AxiosPromise<HashResponse>;
    /**
     * This method allows to retrieve attachment by Hash.
     * @summary Get attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAttachment(hash: string, options?: any): AxiosPromise<AttachmentResponse>;
    /**
     * This method allows to retrieve attachments.
     * @summary Get all attachments.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAttachments(limit?: number | undefined, offset?: number | undefined, options?: any): AxiosPromise<AttachmentListResponse>;
    /**
     * This method allows to upload attachment to Qase. Max upload size: * Up to 32 Mb per file * Up to 128 Mb per single request * Up to 20 files per single request  If there is no free space left in your team account, you will receive an error with code 507 - Insufficient Storage.
     * @summary Upload attachment.
     * @param {string} code Code of project, where to search entities.
     * @param {Array<any>} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    uploadAttachment(code: string, file?: any[] | undefined, options?: any): AxiosPromise<AttachmentUploadsResponse>;
};
/**
 * AttachmentsApi - object-oriented interface
 * @export
 * @class AttachmentsApi
 * @extends {BaseAPI}
 */
export declare class AttachmentsApi extends BaseAPI {
    /**
     * This method allows to remove attachment by Hash.
     * @summary Remove attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AttachmentsApi
     */
    deleteAttachment(hash: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<HashResponse, any>>;
    /**
     * This method allows to retrieve attachment by Hash.
     * @summary Get attachment by Hash.
     * @param {string} hash Hash.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AttachmentsApi
     */
    getAttachment(hash: string, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AttachmentResponse, any>>;
    /**
     * This method allows to retrieve attachments.
     * @summary Get all attachments.
     * @param {number} [limit] A number of entities in result set.
     * @param {number} [offset] How many entities should be skipped.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AttachmentsApi
     */
    getAttachments(limit?: number, offset?: number, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AttachmentListResponse, any>>;
    /**
     * This method allows to upload attachment to Qase. Max upload size: * Up to 32 Mb per file * Up to 128 Mb per single request * Up to 20 files per single request  If there is no free space left in your team account, you will receive an error with code 507 - Insufficient Storage.
     * @summary Upload attachment.
     * @param {string} code Code of project, where to search entities.
     * @param {Array<any>} [file]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AttachmentsApi
     */
    uploadAttachment(code: string, file?: Array<any>, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AttachmentUploadsResponse, any>>;
}
