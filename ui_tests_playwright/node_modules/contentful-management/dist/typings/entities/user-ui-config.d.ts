import { BasicMetaSysProps, DefaultElements, MakeRequest, SysLink } from '../common-types';
export type UserUIConfigProps = {
    /**
     * System metadata
     */
    sys: UserUIConfigSysProps;
    assetListViews: ViewFolder[];
    entryListViews: ViewFolder[];
};
export interface UserUIConfigSysProps extends BasicMetaSysProps {
    space: SysLink;
    environment: SysLink;
}
interface ViewFolder {
    id: string;
    title: string;
    views: View[];
}
interface View {
    id: string;
    title: string;
    order?: {
        fieldId: string;
        direction: 'ascending' | 'descending';
    };
    displayedFieldIds?: string[];
    contentTypeId: string | null;
    searchText?: string;
    searchFilters?: [string, string, string][];
}
export interface UserUIConfig extends UserUIConfigProps, DefaultElements<UserUIConfigProps> {
}
/**
 * @private
 * @param makeRequest - function to make requests via an adapter
 * @param data - Raw data
 * @return Wrapped UserUIConfig
 */
export declare function wrapUserUIConfig(makeRequest: MakeRequest, data: UserUIConfigProps): {
    update: () => Promise<any & UserUIConfigProps & {
        toPlainObject(): UserUIConfigProps;
    }>;
} & UserUIConfigProps & {
    toPlainObject(): UserUIConfigProps;
};
export {};
