import copy from 'fast-copy';
import { freezeSys, toPlainObject } from 'contentful-sdk-core';
import enhanceWithMethods from '../enhance-with-methods';
import { wrapCollection } from '../common-utils';
/**
 * @private
 */
function createEnvironmentAliasApi(makeRequest) {
  const getParams = alias => ({
    spaceId: alias.sys.space.sys.id,
    environmentAliasId: alias.sys.id
  });
  return {
    update: function update() {
      const raw = this.toPlainObject();
      return makeRequest({
        entityType: 'EnvironmentAlias',
        action: 'update',
        params: getParams(raw),
        payload: raw
      }).then(data => wrapEnvironmentAlias(makeRequest, data));
    },
    delete: function _delete() {
      const raw = this.toPlainObject();
      return makeRequest({
        entityType: 'EnvironmentAlias',
        action: 'delete',
        params: getParams(raw)
      }).then(() => {
        // noop
      });
    }
  };
}

/**
 * @private
 * @param makeRequest - function to make requests via an adapter
 * @param data - Raw environment alias data
 * @return Wrapped environment alias data
 */
export function wrapEnvironmentAlias(makeRequest, data) {
  const alias = toPlainObject(copy(data));
  const enhancedAlias = enhanceWithMethods(alias, createEnvironmentAliasApi(makeRequest));
  return freezeSys(enhancedAlias);
}

/**
 * @private
 * @param makeRequest - function to make requests via an adapter
 * @param data - Raw environment alias collection data
 * @return Wrapped environment alias collection data
 */
export const wrapEnvironmentAliasCollection = wrapCollection(wrapEnvironmentAlias);