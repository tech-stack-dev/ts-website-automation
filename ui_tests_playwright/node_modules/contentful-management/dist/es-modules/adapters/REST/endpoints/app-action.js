import * as raw from './raw';
import { normalizeSelect } from './utils';
const getBaseUrl = params => `/organizations/${params.organizationId}/app_definitions/${params.appDefinitionId}/actions`;
const getAppActionUrl = params => `${getBaseUrl(params)}/${params.appActionId}`;
const getAppActionsEnvUrl = params => {
  if (params.environmentId) {
    return `/spaces/${params.spaceId}/environments/${params.environmentId}/actions`;
  }
  return `/spaces/${params.spaceId}/actions`;
};
export const get = (http, params) => {
  return raw.get(http, getAppActionUrl(params));
};
export const getMany = (http, params) => {
  return raw.get(http, getBaseUrl(params), {
    params: normalizeSelect(params.query)
  });
};
export const getManyForEnvironment = (http, params) => {
  return raw.get(http, getAppActionsEnvUrl(params), {
    params: normalizeSelect(params.query)
  });
};
export const del = (http, params) => {
  return raw.del(http, getAppActionUrl(params));
};
export const create = (http, params, data) => {
  return raw.post(http, getBaseUrl(params), data);
};
export const update = (http, params, data) => {
  return raw.put(http, getAppActionUrl(params), data);
};