import * as raw from './raw';
import { normalizeSelect } from './utils';
export const get = (http, params) => {
  return raw.get(http, `/spaces/${params.spaceId}/scheduled_actions/${params.scheduledActionId}`, {
    params: {
      'environment.sys.id': params.environmentId
    }
  });
};
export const getMany = (http, params) => {
  return raw.get(http, `/spaces/${params.spaceId}/scheduled_actions`, {
    params: normalizeSelect(params.query)
  });
};
export const create = (http, params, data) => {
  return raw.post(http, `/spaces/${params.spaceId}/scheduled_actions`, data);
};
export const del = (http, params) => {
  return raw.del(http, `/spaces/${params.spaceId}/scheduled_actions/${params.scheduledActionId}`, {
    params: {
      'environment.sys.id': params.environmentId
    }
  });
};
export const update = (http, params, data) => {
  var _data$environment;
  return raw.put(http, `/spaces/${params.spaceId}/scheduled_actions/${params.scheduledActionId}`, data, {
    params: {
      'environment.sys.id': (_data$environment = data.environment) === null || _data$environment === void 0 ? void 0 : _data$environment.sys.id
    },
    headers: {
      'X-Contentful-Version': params.version
    }
  });
};