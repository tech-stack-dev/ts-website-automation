import * as raw from './raw';
import { normalizeSelect } from './utils';
const getBaseUrl = params => `/organizations/${params.organizationId}/app_definitions/${params.appDefinitionId}/app_bundles`;
const getAppBundleUrl = params => `${getBaseUrl(params)}/${params.appBundleId}`;
export const get = (http, params) => {
  return raw.get(http, getAppBundleUrl(params));
};
export const getMany = (http, params) => {
  return raw.get(http, getBaseUrl(params), {
    params: normalizeSelect(params.query)
  });
};
export const del = (http, params) => {
  return raw.del(http, getAppBundleUrl(params));
};
export const create = (http, params, payload) => {
  const appUploadId = payload.appUploadId,
    comment = payload.comment,
    actions = payload.actions;
  const data = {
    upload: {
      sys: {
        type: 'Link',
        linkType: 'AppUpload',
        id: appUploadId
      }
    },
    comment,
    actions
  };
  return raw.post(http, getBaseUrl(params), data);
};