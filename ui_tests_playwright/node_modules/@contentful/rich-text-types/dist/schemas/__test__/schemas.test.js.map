{"version":3,"file":"schemas.test.js","sourceRoot":"","sources":["../../../src/schemas/__test__/schemas.test.ts"],"names":[],"mappings":";;AAAA,uCAAsC;AACtC,yCAAwC;AACxC,kCAAiD;AAEjD,IAAM,eAAe,GAAG,UAAC,QAAgB;IACvC,IAAM,UAAU,GAAG,IAAA,6BAAqB,EAAC,QAAQ,CAAC,CAAC;IAEnD,MAAM,CAAC,UAAU,CAAC,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;AAC/C,CAAC,CAAC;AAEF,QAAQ,CAAC,uBAAuB,EAAE;IAChC,EAAE,CAAC,uCAAuC,EAAE;QAC1C,MAAM,CAAC,MAAM,CAAC,iBAAO,CAAC,CAAC,OAAO,CAAC,UAAC,QAAQ;YACtC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,MAAM,CAAC,eAAM,CAAC,CAAC,OAAO,CAAC,UAAC,QAAQ;YACrC,eAAe,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,eAAe,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,iCAAiC,EAAE;QACpC,MAAM,CAAC,cAAM,OAAA,IAAA,6BAAqB,EAAC,mBAAmB,CAAC,EAA1C,CAA0C,CAAC,CAAC,4BAA4B,EAAE,CAAC;IAC1F,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","sourcesContent":["import { BLOCKS } from '../../blocks';\nimport { INLINES } from '../../inlines';\nimport { getSchemaWithNodeType } from '../index';\n\nconst matchesSnapshot = (nodeType: string): void => {\n  const jsonSchema = getSchemaWithNodeType(nodeType);\n\n  expect(jsonSchema).toMatchSnapshot(nodeType);\n};\n\ndescribe('getSchemaWithNodeType', () => {\n  it('returns json schema for each nodeType', () => {\n    Object.values(INLINES).forEach((nodeType) => {\n      matchesSnapshot(nodeType);\n    });\n    Object.values(BLOCKS).forEach((nodeType) => {\n      matchesSnapshot(nodeType);\n    });\n\n    matchesSnapshot('text');\n  });\n\n  it('throws error if no schema found', () => {\n    expect(() => getSchemaWithNodeType('unknown-node-type')).toThrowErrorMatchingSnapshot();\n  });\n});\n"]}