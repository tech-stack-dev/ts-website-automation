import { Reporter, TestCase, TestResult } from '@playwright/test/reporter';
interface QaseOptions {
    apiToken: string;
    basePath?: string;
    rootSuiteTitle?: string;
    projectCode: string;
    runId?: string;
    runPrefix?: string;
    logging?: boolean;
    runComplete?: boolean;
    environmentId?: number;
    uploadAttachments?: boolean;
}
declare class PlaywrightReporter implements Reporter {
    private api;
    private options;
    private runId?;
    private isDisabled;
    private queued;
    private resultsToBePublished;
    constructor(_options: QaseOptions);
    private static createRunObject;
    private static getEnv;
    private static getPackageVersion;
    private static createHeaders;
    private static getSuitePath;
    onBegin(): Promise<void>;
    onTestEnd(test: TestCase, testResult: TestResult): Promise<void>;
    onEnd(): Promise<void>;
    private log;
    private getCaseIds;
    private logTestItem;
    private checkProject;
    private createRun;
    private checkRun;
    private uploadAttachments;
    private removePublished;
    private prepareCaseResult;
}
export default PlaywrightReporter;
